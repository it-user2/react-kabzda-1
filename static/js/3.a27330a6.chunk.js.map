{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/lookforajob.png","assets/images/looknotforajob.png","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","avatar","src","photos","large","userPhoto","avatarImage","avatarBlock","title","text","fullName","userId","aboutMe","lookingForAJob","lookforajob","looknotforajob","lookForAJob","lookingForAJobDescription","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","React","memo","postElements","posts","reverse","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a27330a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1kvNz\",\"avatar\":\"ProfileInfo_avatar__1PUrM\",\"avatarImage\":\"ProfileInfo_avatarImage__2S6kJ\",\"avatarBlock\":\"ProfileInfo_avatarBlock__1FP02\",\"title\":\"ProfileInfo_title__3__kU\",\"text\":\"ProfileInfo_text__2g_6R\",\"lookForAJob\":\"ProfileInfo_lookForAJob__2PBNq\"};","module.exports = __webpack_public_path__ + \"static/media/lookforajob.3f32cfe8.png\";","module.exports = __webpack_public_path__ + \"static/media/looknotforajob.bf9ea681.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__s_m_O\",\"posts\":\"MyPosts_posts__3dvY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2gska\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n/*\r\n    let sateWithSetState = useState(false);\r\n    let editMode = sateWithSetState[0];\r\n    let setEditMode = sateWithSetState[1];\r\n\r\n    Вместо этого напишем через ДЕСТРУКТУРИРОВАННОЕ ПРИСВАИВАНИЕ:\r\n*/\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // функция, переданная в хук useEffect будет вызвана,\r\n    // когда компонента отрисуется (аналог вызова метода componentDidUpdate)\r\n    //=======\r\n    // функция, переданная в хук useEffect будет вызвана, когда что-то изменится\r\n    // указанное в массиве, прописанном после функции: [props.status]\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChanged = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || '------------'}\r\n                    </span>\r\n                </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChanged}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport lookforajob from '../../../assets/images/lookforajob.png'\r\nimport looknotforajob from '../../../assets/images/looknotforajob.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.avatar}>\r\n                    <img src={profile.photos.large ? profile.photos.large : userPhoto} className={s.avatarImage}/>\r\n                </div>\r\n\r\n                <p></p>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <p></p>\r\n\r\n                <div className={s.avatarBlock}>\r\n                    <div className={s.title}>Имя:</div>\r\n                    <div className={s.text}>{profile.fullName}</div>\r\n                </div>\r\n                <div className={s.avatarBlock}>\r\n                    <div className={s.title}>ID:</div>\r\n                    <div className={s.text}>{profile.userId}</div>\r\n                </div>\r\n                <div className={s.avatarBlock}>\r\n                    <div className={s.title}>Обо мне:</div>\r\n                    <div className={s.text}>{profile.aboutMe}</div>\r\n                </div>\r\n                <div className={s.avatarBlock}>\r\n                    <div className={s.title}>Ищу работу:</div>\r\n                    <img src={profile.lookingForAJob ? lookforajob : looknotforajob} className={s.lookForAJob}/>\r\n                </div>\r\n                <div className={s.avatarBlock}>\r\n                    <div className={s.title}>Описание поиска работы:</div>\r\n                    <div className={s.text}>{profile.lookingForAJobDescription}</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://i.ytimg.com/vi/fUWrhetZh9M/maxresdefault.jpg' />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'type Post message'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>New post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n        let postElements =\r\n            [...props.posts]\r\n                .reverse()\r\n                .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postElements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId; // 1049; // 2;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n//    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}